CREATE TABLE Professores (
	cpf VARCHAR(11) NOT NULL,
    nome VARCHAR(50) NOT NULL,
	telefone VARCHAR(9),
    email VARCHAR(50) NOT NULL,
    senha VARCHAR(16) NOT NULL,
    
    PRIMARY KEY (cpf)
);

CREATE TABLE Escolas (
    cnpj VARCHAR(14) NOT NULL,
    nome VARCHAR(100) NOT NULL,
    senha VARCHAR(16) NOT NULL,
    PRIMARY KEY (cnpj)
);

CREATE TABLE Escolas_Professores (
    cnpj_escola VARCHAR(14) NOT NULL,
	cpf_professor VARCHAR(11) NOT NULL,
    
    PRIMARY KEY(cpf_professor, cnpj_escola),
    FOREIGN KEY(cnpj_escola) REFERENCES escolas(cnpj),
    FOREIGN KEY(cpf_professor) REFERENCES Professores(cpf)
);

CREATE TABLE Cursos (
    id INT NOT NULL AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL,
    anos INT NOT NULL,
    cnpj_escola VARCHAR(14) NOT NULL,
    
    PRIMARY KEY(id),
    FOREIGN KEY(cnpj_escola) REFERENCES escolas(cnpj)
);

CREATE TABLE Turmas (
    id INT NOT NULL AUTO_INCREMENT,
    ano INT NOT NULL,
    id_curso INT NOT NULL,
    
    PRIMARY KEY(id),
    FOREIGN KEY(id_curso) REFERENCES cursos(id)
);

CREATE TABLE Alunos (
    cpf VARCHAR(11) NOT NULL,
    nome VARCHAR(40) NOT NULL,
    telefone VARCHAR(9),
    email VARCHAR(50) NOT NULL,
    senha VARCHAR(16) NOT NULL,

    PRIMARY KEY(cpf)
);

CREATE TABLE Alunos_Escolas (
	matricula INT AUTO_INCREMENT NOT NULL,
    cpf_aluno VARCHAR(11) NOT NULL,

    PRIMARY KEY(matricula,cpf_aluno),
    FOREIGN KEY(cpf_aluno) REFERENCES alunos(cpf)
);

CREATE TABLE Alunos_Turmas (
	matricula_aluno INT NOT NULL,
    id_turma INT NOT NULL,    

    PRIMARY KEY(matricula_aluno,id_turma),
    FOREIGN KEY(matricula_aluno) REFERENCES Alunos_Escolas(matricula),
    FOREIGN KEY(id_turma) REFERENCES turmas(id)
);

CREATE TABLE Disciplinas (
    id INT AUTO_INCREMENT NOT NULL,
    nome VARCHAR(30) NOT NULL,
    carga_horaria INT NOT NULL,
    id_curso INT NOT NULL,
    
    PRIMARY KEY (id),
    FOREIGN KEY (id_curso) REFERENCES cursos(id)
);

CREATE TABLE Professores_Turmas_Disciplinas (
	cpf_professor VARCHAR(11) NOT NULL,
    id_turma INT NOT NULL,
    id_disciplina INT NOT NULL,
    
    PRIMARY KEY(cpf_professor, id_turma, id_disciplina),
    FOREIGN KEY(cpf_professor) REFERENCES professores(cpf),
    FOREIGN KEY(id_turma) REFERENCES turmas(id),
    FOREIGN KEY(id_disciplina) REFERENCES disciplinas(id)
);

CREATE TABLE Turmas_Disciplinas (
    id_turma INT NOT NULL,
    id_disciplina INT NOT NULL,
    
    PRIMARY KEY(id_turma, id_disciplina),
    FOREIGN KEY(id_turma) REFERENCES turmas(id),
    FOREIGN KEY(id_disciplina) REFERENCES disciplinas(id)
);

CREATE TABLE Aulas (
    cpf_professor VARCHAR(11) NOT NULL,
    id_turma INT NOT NULL,
    data DATE NOT NULL,
    disciplina VARCHAR(30) NOT NULL,
    
    PRIMARY KEY(cpf_professor, id_turma),
    FOREIGN KEY(cpf_professor) REFERENCES professores(cpf),
    FOREIGN KEY(id_turma) REFERENCES Turmas(id)
);

CREATE TABLE Atividades (
    id INT AUTO_INCREMENT NOT NULL,
    id_turma INT NOT NULL,
    id_disciplina INT NOT NULL,
    titulo VARCHAR (100),
    descricao VARCHAR (400),
    
    PRIMARY KEY(id),
    FOREIGN KEY (id_turma) REFERENCES turmas(id),
    FOREIGN KEY (id_disciplina) REFERENCES disciplinas(id)
);

CREATE TABLE Notas (
    matricula_aluno INT NOT NULL,
    id_disciplina INT NOT NULL,
    valor1 INT DEFAULT 0,
    valor2 INT DEFAULT 0,
    valor3 INT DEFAULT 0,
    media INT DEFAULT 0,
    
    PRIMARY KEY (matricula_aluno, id_disciplina),
    FOREIGN KEY (matricula_aluno) REFERENCES Alunos_Escolas(matricula),
    FOREIGN KEY (id_disciplina) REFERENCES disciplinas(id)
);

DELIMITER // CREATE PROCEDURE InserirTurmas (limite INT) BEGIN DECLARE contador INT DEFAULT 0; loop_insert: LOOP SET contador = contador + 1; INSERT INTO turmas (ano, id_curso) SELECT contador, MAX(id) FROM cursos; IF contador >= limite THEN LEAVE loop_insert; END IF; END LOOP loop_insert; END// DELIMITER ; 